<!DOCTYPE html>
<html>

<head>
  <title>%TITLE%</title>
  <link rel="icon" type="image/svg+xml" href="/images/favicon.svg">
  <link rel="icon" type="image/png" href="/images/favicon.png">
  <link rel="stylesheet" type="text/css" href="/style/style.css">
  <link rel="stylesheet" type="text/css" href="/style/styleMobile.css">
  <link rel="stylesheet" type="text/css" href="/style/styleAddon.css">
  <style>
    :root {
      --ColorHome: var(--secondary);
      --ColorConfig: var(--secondary);
      --ColorWiFi: var(--contrast);
      --ColorSystem: var(--secondary)
    }
  </style>
  <script src="/view.js"></script>
  <script type="text/javascript">
    function createWiFiTagInputPass(ViewTagValue) {
      let ValueInput = document.createElement("input");
      ValueInput.setAttribute("name", "value");
      ValueInput.setAttribute("style", "padding-right:54px;text-align:right;");
      ValueInput.type = "password";
      ViewTagValue.appendChild(ValueInput);
    }

    function createWiFiTagInputText(ViewTagValue) {
      let ValueInput = document.createElement("input");
      ValueInput.setAttribute("name", "value");
      ValueInput.setAttribute("style", "padding-right:54px;text-align:right;");
      ValueInput.type = "text";
      ViewTagValue.appendChild(ValueInput);
    }

    function createWiFiTagInputBool(ViewTagValue) {
      let ValueInput = document.createElement("input");
      ValueInput.type = "button";
      ValueInput.setAttribute("name", "value");
      ValueInput.setAttribute("style", "text-align:center;");
      ValueInput.setAttribute("textOn", "On");
      ValueInput.setAttribute("textOff", "Off");
      ValueInput.classList = "secondary outline"
      ValueInput.setAttribute("onclick", "onToggle(this)");
      ViewTagValue.appendChild(ValueInput);
    }

    function createWifiTag(ViewElement, ViewName, TagName, TagType) {
      // create Tag Row
      let ViewTag = document.createElement("div");
      ViewTag.setAttribute("name", TagName);
      ViewTag.setAttribute("style", "align-items:baseline ;");
      ViewTag.classList.add("grid");
      // create Tag Name
      let ViewTagName = document.createElement("p");
      ViewTagName.id = "name";
      ViewTagName.innerText = ViewName;
      ViewTag.appendChild(ViewTagName);
      // create Tag Value Block
      let ViewTagValue = document.createElement("div");
      ViewTagValue.setAttribute("style", "display:flex;align-items:baseline;");
      ViewTag.appendChild(ViewTagValue);
      if (TagType === "pass") {
        createWiFiTagInputPass(ViewTagValue);
      }
      else if (TagType === "text") {
        createWiFiTagInputText(ViewTagValue);
      }
      else if (TagType === "bool") {
        createWiFiTagInputBool(ViewTagValue);
      }
      // add Tag to Element
      ViewElement.appendChild(ViewTag);
      return ViewTag;
    }

    function createWiFiElement(ViewElements) {
      let ViewElement = document.createElement("article");
      let ViewElementHeader;
      ViewElementHeader = document.createElement("header");
      ViewElementHeader.innerText = "WiFi Config";
      ViewElement.appendChild(ViewElementHeader);
      createWifiTag(ViewElement, "SSID", "ssid", "text");
      createWifiTag(ViewElement, "Password", "pass", "pass");
      createWifiTag(ViewElement, "DHCP", "dhcp", "bool");
      createWifiTag(ViewElement, "Ststic IP", "ip", "text");
      createWifiTag(ViewElement, "Subnet-Mask", "subnet", "text");
      createWifiTag(ViewElement, "Gateway", "gateway", "text");
      ViewElements.appendChild(ViewElement);
      return ViewElement;
    }

    function updateWiFiTag(ViewElement, TagName, Value) {
      let ViewTag = ViewElement.querySelector("div[name='" + TagName + "']");
      if (ViewTag !== null) {
        let ValueInput = ViewTag.querySelector("input[name='value']");
        if (ValueInput.type === "button") {
          if (Value) {
            ValueInput.value = ValueInput.getAttribute("textOn");
            ValueInput.className = "primary";
          } else {
            ValueInput.value = ValueInput.getAttribute("textOff");
            ValueInput.className = "primary outline";
          }
        } else {
          ValueInput.value = Value;
        }
      }
    }

    function setWiFiElement(ViewElement, DataElement) {
      for (const Property in DataElement) {
        updateWiFiTag(ViewElement, Property, DataElement[Property]);
      }
    }

    function onToggle(ValueInput) {
      if (ValueInput.value !== ValueInput.getAttribute("textOn")) {
        ValueInput.value = ValueInput.getAttribute("textOn");
        ValueInput.className = "primary";
      } else {
        ValueInput.value = ValueInput.getAttribute("textOff");
        ValueInput.className = "primary outline";
      }
    }

    function onAdd() {
      console.log("onAdd");
      let ViewElements = document.getElementById("elements");
      let ViewElement = createWiFiElement(ViewElements);
    }
    function onDelete(Element) {
      Element.parentElement.remove();
    }
    function onSaveConfig() {
      // Create JSON-File form Page and write to Server
    }

    fetch("http://" + location.host + "/sysConfig.json")
      .then(response => {
        return response.json();
      })
      .then(data => {
        console.log(data);
        //Loop Elements
        if ("wifi" in data) {
          let DataElements = data.wifi;
          let ViewElements = document.getElementById("elements");
          DataElements.forEach((DataElement, EIndex) => {
            if ((typeof DataElement === "object") && (DataElement !== null)) {
              let ViewElement = createWiFiElement(ViewElements);
              setWiFiElement(ViewElement, DataElement);
            }
          });
        }
      });
  </script>
</head>

<body>
  <nav class="container-fluid">
    <ul>
      <li>%SVG_LOGO%</li>
      <li>Konfiguration</li>
    </ul>
    <ul>
      <li><a href="/home.htm">%SVG_HOME%</a></li>
      <li><a href="/config.htm">%SVG_CONFIG%</a></li>
      <li><a href="/connect">%SVG_WIFI%</a></li>
      <li><a href="/sys">%SVG_SYSTEM%</a></li>
    </ul>
  </nav>
  <main class="container">
    <section id="elements">
    </section>
    <button onclick="onAdd()">Add Config</button>
    <button onclick="onSaveConfig()">Save Config</button>
  </main>
</body>
</ht???